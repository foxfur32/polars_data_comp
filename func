import polars as pl

def compare_polars_dfs(df1: pl.DataFrame, df2: pl.DataFrame, *, keys: list[str] | None = None):
    """
    Checks whether column *names and order* are identical and lists columns whose values differ.
    If keys are provided, both DataFrames are sorted by those keys before value comparison.
    """
    # 0) Optional: align row order by keys if provided
    if keys:
        df1 = df1.sort(keys)
        df2 = df2.sort(keys)

    # 1) Column name/order check
    cols1, cols2 = df1.columns, df2.columns
    columns_identical = cols1 == cols2

    only_in_df1 = sorted(set(cols1) - set(cols2))
    only_in_df2 = sorted(set(cols2) - set(cols1))

    # 2) Value comparison on shared columns (row-by-row)
    common_cols = sorted(set(cols1) & set(cols2))
    diff_value_cols = []

    # If heights differ, every shared column is "different" by definition
    if df1.height != df2.height:
        diff_value_cols = common_cols.copy()
    else:
        for col in common_cols:
            s1 = df1[col]
            s2 = df2[col]

            # Quick dtype check ‚Äî differing dtypes usually imply differences
            if s1.dtype != s2.dtype:
                diff_value_cols.append(col)
                continue

            # Null-safe equality: treat null==null as equal
            equal_mask = (s1 == s2) | (s1.is_null() & s2.is_null())
            # In Polars, .all() on a boolean Series returns a Python bool
            if not bool(equal_mask.all()):
                diff_value_cols.append(col)

    result = {
        "columns_identical": columns_identical,
        "only_in_df1": only_in_df1,
        "only_in_df2": only_in_df2,
        "different_value_columns": diff_value_cols,
    }

    # Nicely print a summary
    print(f"Columns identical? {columns_identical}")
    if not columns_identical:
        if only_in_df1: print("üü¶ Only in df1:", only_in_df1)
        if only_in_df2: print("üü® Only in df2:", only_in_df2)
    if diff_value_cols:
        print("‚ö†Ô∏è Columns with different values:", diff_value_cols)
    else:
        print("‚úÖ All common columns have identical values (row order compared{})."
              .format(f" after sorting by {keys}" if keys else ""))

    return result
